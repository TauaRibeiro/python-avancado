class No():
    def __init__(self, valor: int) -> None:
        self.valor = valor
        self.esquerda = None
        self.direita = None


class arvore():
    def __init__(self):
        self.raiz = None


    def inserir(self, valor: int) -> None:
        if self.raiz == None:
            self.raiz = No(valor)
        

    def _inserirRecursivo(self, no: No, valor: int) -> None:
        if valor > no.valor:
            if no.esquerda == None:
                no.esquerda = No(valor)
            else:
                self._inserirRecursivo(self, no.esquerda, valor)
        
        if no.direita == None:
            no.direita = No(valor)
        else:
            self._inserirRecursivo(self, no.direita, valor)
            
    
    def emOrdem(self, no: No) -> None:
        if no == None:
            return

        self.emOrdem(self, no.esquerda)
        print(no.valor)
        self.emOrdem(self, no.direita)

    
    def excluir(self, valor) -> None:
        if self.raiz == None:
            print('Não há valores na árvore')
            return
        

    def _excluirrecursivo(self, valor, no_atual: No, no_anterior: No):
        if no_atual.valor == valor:
            if no_atual == self.raiz:
                self.raiz = no_atual.esquerda if no_atual.esquerda != None else no_atual.direita
                return
            
            if no_atual.direita == None and no_atual == None:
                if no_anterior.esquerda == no_atual:
                    no_anterior.esquerda = None
                    del(no_atual)
                else:
                    no_anterior.direita = None
                    del(no_atual)

